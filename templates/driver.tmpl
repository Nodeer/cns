<!DOCTYPE html>
<html lang="en">
    <head>

        {{ template "head.tmpl" . }}

        <!-- sweet alerts -->
        <link href="/static/sweet-alert/sweet-alert.min.css" rel="stylesheet">
        <link href="/static/dropzone/dropzone.css" rel="stylesheet" type="text/css" />
        <!-- DataTables -->
        <link href="/static/datatables/data-tables-bootstrap.css" rel="stylesheet" type="text/css" />
        <link rel="stylesheet" href="/static/datatables/custom.css" charset="utf-8">

    </head>

    <body>

        {{ template "side-nav.tmpl" . }}

        <!--Main Content Start -->
        <section class="content">

            {{ template "nav.tmpl" }}

            <div class="wraper container-fluid">
                <div class="row">
                    <div class="col-sm-12">

                        <p class="lead">
                            Driver: {{ if .driver.Id }}{{ .driver.FirstName }} {{ .driver.LastName}}{{ else }}NEW{{ end }}
                        </p>

                        <div class="panel panel-default p-0">
                            <div class="panel-body p-0">
                                <ul class="nav nav-tabs profile-tabs">
                                    <li class="active"><a id="infoTab" class="view" data-toggle="tab" href="#infoPane">Information</a></li>
                                    <li><a id="docsTab" class="view" data-table="docsTable" data-toggle="tab" href="#docsPane">Forms</a></li>
                                    <li><a id="filesTab" class="view" data-table="filesTable" data-toggle="tab" href="#filesPane">Uploaded Files</a></li>
                                    <li><a id="settingsTab" class="view" data-toggle="tab" href="#settingsPane">Settings</a></li>
                                </ul>

                                <div class="tab-content m-0">

                                    <div id="infoPane" class="tab-pane active">
                                        <div class="profile-desk">
                                            <h1>{{ .driver.FirstName }} {{ .driver.LastName}}</h1>

                                            <table class="table table-condensed">
                                                <tbody>
                                                    <tr>
                                                        <td><b>Email</b></td>
                                                        <td>{{ .driver.Email }}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Phone</b></td>
                                                        <td>{{ .driver.Phone }}</td>
                                                    </tr>

                                                    <tr>
                                                        <td><b>Address</b></td>
                                                        <td>{{ .driver.AddrHTML }}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Date of Birth</b></td>
                                                        <td>{{ .driver.FormatDOB }}</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Age</b></td>
                                                        <td>{{ .driver.GetAge }}</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <div id="docsPane" class="tab-pane">
                                        <div class="row m-t-10">
                                            <div class="col-lg-4">
                                				<h2>Add Documents</h2>
                                				<div id="docs" class="list-group">
                                					{{ range $dqf := .dqfs }}
                                                        <p>
                                                            DQF{{ index $dqf 0 }} - {{ index $dqf 1 }}
                                							<button id="addDoc" data-added="0" data-docId="{{ index $dqf 0 }}" class="btn-default btn btn-xs pull-right check">
                                								<i class="fa fa-check"></i>
                                							</button>
                                						</p>
                                					{{ end }}
                                                    <p>
                                						<form id="documentForm" class="text-center" role="form" method="post" action="/admin/driver/{{ .driver.Id }}/document">
                                							<input type="hidden"  id="docIds" name="docIds">
                                                            <input type="hidden" name="id" value="{{ .driver.Id }}">
                                							<button id="done" class="btn btn-md btn-primary btn-block" type="submit" disabled="disabled">
                                								Please Select Documents
                                							</button>
                                						</form>
                                                    </p>
                                				</div>
                                    		</div>
                                            <div class="col-lg-8">
                                                <div class="table-responsive">
                                                    <table id="docsTable" class="table table-bordered table-hover">
                                                        <thead>
                                                            <tr id="search">
                                                                <th>dqf</th>
                                                                <th></th>
                                                                <th></th>
                                                            </tr>
                                                            <tr>
                                                                <th>DQF</th>
                                                                <th>Complete</th>
                                                                <th></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            {{ $driver := .driver }}
                                                            {{ range $doc := .docs }}
                                                                <tr class="clickable" data-url="/document/{{ $doc.Id }}" data-target="_blank">
                                                                    <td>{{ $doc.DocumentId }}</td>
                                                                    <td>{{ $doc.Complete }}</td>
                                                                    <td class="text-center"><a data-message="Are you sure you would like to delete this document?" data-color="red" data-url="/document/del/{{ $driver.Id }}/{{ $doc.Id }}" class="confirm-action btn btn-danger btn-xs" data-type="warning">Delete</a></td>
                                                                </tr>
                                                            {{ end }}
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- profile -->
                                    <div id="filesPane" class="tab-pane">
                                        <div class="row m-t-10">
                                            <div class="col-lg-6">
                                                <div class="table-responsive">
                                                    <table id="filesTable" class="table table-bordered table-hover">
                                                        <thead>
                                                            <tr id="search" class="search">
                                                                <th>name</th>
                                                                <th>size</th>
                                                                <th></th>
                                                            </tr>
                                                            <tr>
                                                                <th>Name</th>
                                                                <th>Size</th>
                                                                <th></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            {{ $driver := .driver }}
                                                            {{ range $file := .files }}
                                                                <tr class="clickable" data-url="/driver/file/{{ $driver.Id }}/{{ $file.name }}" data-target="_blank">
                                                                    <td>{{ $file.name }}</td>
                                                                    <td>{{ size $file.size }}</td>
                                                                    <td class="text-center"><a data-message="Are you sure you would like to delete this file?" data-color="red" data-url="/driver/file/{{ $driver.Id}}/{{ $file.name }}" class="confirm-action btn btn-danger btn-xs" data-type="warning">Delete</a></td>
                                                                </tr>
                                                            {{ end }}
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <form action="/driver/upload" method="post" class="dropzone" id="dropzone">
                                                    <div class="fallback">
                                                        <input name="file" type="file" multiple />
                                                    </div>
                                                    <input type="hidden" name="id" value="{{ .driver.Id }}">
                                                </form>

                                            </div>
                                        </div>
                                    </div>

                                    <!-- settings -->
                                    <div id="settingsPane" class="tab-pane">
                                        <div class="user-profile-content">
                                            <form id="set" role="form" action="/driver" method="post">
                                                <div class="row">
                                                    <div class="col-lg-6">
                                                        <div class="form-group">
                                                            <label>First Name</label>
                                                            <input type="text" value="{{ .driver.FirstName }}" name="firstName" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>Last Name</label>
                                                            <input type="text" value="{{ .driver.LastName }}" name="lastName" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>Email</label>
                                                            <input type="email" value="{{ .driver.Email }}" name="auth.Email" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>Date of Birth</label>
                                                            <input type="date" value="{{ .driver.DOB }}" name="dOB" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>License Number</label>
                                                            <input type="text" value="{{ .driver.LicenseNum }}" name="LicenseNum" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>License State</label>
                                                            <input type="text" value="{{ .driver.LicenseState }}" name="licenseState" class="form-control">
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-6">
                                                        <div class="form-group">
                                                            <label>Street</label>
                                                            <input type="text" value="{{ .driver.Street }}" name="address.Street" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>City</label>
                                                            <input type="text" value="{{ .driver.City }}" name="address.City" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>State</label>
                                                            <input type="text" value="{{ .driver.State }}" name="address.State" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>Zip</label>
                                                            <input type="text" value="{{ .driver.Zip }}" name="address.Zip" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>Phone</label>
                                                            <input type="text" value="{{ .driver.Phone }}" name="phone" class="form-control">
                                                        </div>
                                                        <input type="hidden" name="id" value="{{ .driver.Id }}">
                                                    </div>
                                                </div>
                                                <button class="btn btn-primary" type="submit">Save</button>
                                            </form>
                                            <br>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {{ template "footer.tmpl" . }}

        </section>

        {{ template "scripts.tmpl" . }}

        <script src="/static/js/jquery.scrollTo.min.js"></script>
        <script src="/static/dropzone/dropzone.min.js"></script>
        <script src="/static/datatables/jquery.dataTables.min.js"></script>
        <script src="/static/datatables/dataTables.bootstrap.js"></script>
        <script src="/static/js/confirm.js" charset="utf-8"></script>
        <script src="/static/datatables/custom.js" charset="utf-8"></script>

        {{ if not .driver.Id}}
            <script type="text/javascript">
                $('a#settingsTab').tab('show');
            </script>
        {{ end }}

        <script>

            var selectedTable = '';
            var table = {};
            var tableState = {
                'docsTable': {
                    'table':{},
                    'search':''
                },
                'filesTable': {
                    'table':{},
                    'search':''
                }
            }

            $('a.view').click(function() {
                newTable = $(this).attr('data-table');
                if (newTable !== selectedTable && newTable !== undefined) {
                    if (selectedTable !== '') {
                        tableState[selectedTable]['search'] = $('input#filter').val();
                    }
                    $('input#filter').val(tableState[newTable]['search']);
                    table = tableState[newTable]['table'];
                    selectedTable = newTable;
                }
            });

            tableState['docsTable']['table'] = $('#docsTable').DataTable({
                "lengthMenu":[5,10,15,20],
                "dom": 'lrtip',
                "columnDefs": [
                    { "orderable": false, "targets": [1,2] },
                    { "name": "dqf",   "targets": 0 }
                ]
            });

            tableState['filesTable']['table'] = $('#filesTable').DataTable({
                "lengthMenu":[5,10,15,20],
                "dom": 'lrtip',
                "columnDefs": [
                    { "orderable": false, "targets": [2] },
                    { "name": "name",   "targets": 0 },
                    { "name": "size",  "targets": 1 },
                ]
            });

            function renderTable(data) {
                table.data = [];
                table.rows('*').remove().draw();
                for (var i = 0; i < data.length; i++) {
                    if (selectedTable === 'docsTable') {
                        renderDocRow(data[i]);
                    } else if (selectedTable === 'filesTable') {
                        renderFileRow(data[i]);
                    }
                }
            }

            function renderDocRow(doc) {
                var rowNode = table.row.add([
                    doc.documentId,
                    doc.complete,
                    '<a data-message="Are you sure you would like to delete this document?" data-color="red" data-url="/document/del/{{ .driver.Id }}/' + doc.id + '" class="confirm-action btn btn-danger btn-xs" data-type="warning">Delete</a>'
                ]).draw().node();
                var jRowNode = $(rowNode);
                jRowNode.addClass('clickable').attr('data-url', '/document/' + doc.id).attr('data-target', '_blank');
                jRowNode.children().last().addClass('text-center');
            }

            function renderFileRow(file) {
                var rowNode = table.row.add([
                    file.name,
                    prettySize(file.size),
                    '<a data-message="Are you sure you would like to delete this file?" data-color="red" data-url="/driver/file/{{ .driver.Id }}/' + file.name + '" class="confirm-action btn btn-danger btn-xs" data-type="warning">Delete</a>'
                ]).draw().node();
                var jRowNode = $(rowNode);
                jRowNode.addClass('clickable').attr('data-url', '/driver/file/{{ .driver.Id }}/' + file.name).attr('data-target', '_blank');
                jRowNode.children().last().addClass('text-center');
            }

            var docId = [];
			$('button[id="addDoc"]').click(function() {
                var b = $(this);
                if (b.attr('data-added') == '0') {
					docId.push(b.attr('data-docId'));
                    b.removeClass('btn-default');
                    b.addClass('btn-success');
					b.attr('data-added', '1');
					$('button[id="done"]').removeAttr('disabled');
					$('button[id="done"]').text('Add Documents To Driver');
				} else {
                    var idx = docId.indexOf(b.attr('data-docId'));
                    if (idx > -1) {
                        docId.splice(idx, 1);
                    }
                    b.removeClass('btn-success');
					b.addClass('btn-default');
					b.attr('data-added', '0');
					if(docId.length < 1) {
						$('button[id="done"]').attr('disabled', 'disabled');
						$('button[id="done"]').text('Please Select Documents');
					}
				}
			});

            $('button[id="done"]').click(function(e){
				e.preventDefault();
                $.ajax({
                    url: '/driver/document',
                    method: 'POST',
                    data: {
                        docIds :docId.join(','),
                        id: '{{ .driver.Id }}'
                    },
                    success: function(resp) {
                        if (resp.status === 'success')  {
                            renderTable(resp.data);
                            docId = [];
                            $('button.check').removeClass('btn-success');
                            $('button.check').addClass('btn-default');
                            $('button#done').attr('disabled', 'disabled');
    						$('button#done').text('Please Select Documents');
                            $.Notification.autoHideNotify('success', 'top right', resp.msg);
                            return
                        }
                        if (resp.status === 'error' && resp.type == 'marshal') {
                            docId = [];
                            $('button.check').removeClass('btn-success');
                            $('button.check').addClass('btn-default');
                            $('button#done').attr('disabled', 'disabled');
    						$('button#done').text('Please Select Documents');
                            $.Notification.confirm('success', 'top right', resp.msg, 'Reload Now');
                            return
                        }
                        $.Notification.autoHideNotify('error', 'top right', resp.msg);
                    },
                    error: function(d) {
                        alert('error');
                    }
                })
			});

            Dropzone.options.dropzone = false;
            var myDropzone = new Dropzone('#dropzone', {
                createImageThumbnails: false,
                filesixeBase: 1024,
                init: function() {
                    this.on('success', function(file, resp) {
                        if (resp.status === 'success')  {
                            renderTable(resp.data);
                            $.Notification.autoHideNotify('success', 'top right', resp.msg);
                            return
                        }
                        if (status === 'error' && (resp.type === 'marshal' || resp.type === 'readDir')) {
                            $.Notification.confirm('success', 'top right', resp.msg, 'Reload Now');
                            return
                        }
                        $.Notification.autoHideNotify('error', 'top right', resp.msg);
                    });
                    this.on('removedfile', function(file) {
                        alert(file.name);

                    });
                },
            });

            function prettySize(size) {
                var c = 0;
                while (size >= 1024) {
                    size = size / 1024;
                    c++;
                }
                var ind = '';
                switch (c) {
                    case 0:
                        ind = 'B';
                        break;
                    case 1:
                        ind = 'KB';
                        break;
                    case 2:
                        ind = 'MB';
                        break;
                    case 3:
                        ind = 'GB';
                        break;
                }
                var s =+ round(size, 1);
                return s + ' ' + ind;
            }

            function round(n, place) {
                var t = Math.pow(10, place)
                return Math.round(n *t) / t;
            }

            $(document).on('click', '.notifyjs-metro-base .yes', function() {
                location.reload();
            });

            confirm.yes = function(btn) {
                $.ajax({
					method:'POST',
					url: btn.attr('data-url'),
					success: function(resp) {
						if (resp.status == 'success') {
							swal("Deleted!", resp.msg, "success");
                            renderTable(resp.data);
							return
						}
						if (resp.status === 'error' && (resp.type === 'marshal' || resp.type === 'readDir')) {
                            swal({
				                title: '',
				                text: resp.msg,
				                type: 'success',
				                showCancelButton: true,
				                confirmButtonColor: 'green',
				                confirmButtonText: 'Reload Now',
				                closeOnConfirm: false
				            }, function(){
								location.reload();
								return
							})
							return
						}
    					swal("Error!", resp.msg, "error");
    					return
					},
					error: function() {
						swal("Error!", 'Error deleteing. Please try again', "error");
						return
					}
				});
            }






            /*
            confirm.yes = function(btn) {
                $.ajax({
					method:'POST',
					url: btn.attr('data-url'),
					success: function(resp) {
						if (resp.status == 'success') {
							swal("Deleted!", resp.msg, "success");
                            renderForms(resp.docs);
							return
						}
						if (status === 'error' && (resp.type === 'marshal' || resp.type === 'readDir')) {
							swal({
				                title: '',
				                text: resp.msg,
				                type: 'success',
				                showCancelButton: true,
				                confirmButtonColor: 'green',
				                confirmButtonText: 'Reload Now',
				                closeOnConfirm: false
				            }, function(){
								location.reload();
								return
							})
							return
						}
					},
					error: function() {
						swal("Error!", resp.msg, "error");
						return
					}
				});
            }

            var selectedTable = '';
            var tableState = {
                'docsTable':'',
                'filesTable': '',
            }

            $('a.view').click(function() {
                newTable = ($(this).attr('data-table') === undefined) ? '' : $(this).attr('data-table');

                if (newTable !== selectedTable) {
                    tableState[selectedTable] = $('input#filter').val();
                    $('input#filter').val(tableState[newTable]);
                    selectedTable = newTable;
                }
            });

            // #files
            Dropzone.options.dropzone = false;
            var myDropzone = new Dropzone('#dropzone', {
                createImageThumbnails: false,
                filesixeBase: 1024,
                init: function() {
                    this.on('success', function(file, resp) {
                        if (resp.status === 'success')  {
                            renderFiles(resp.files);
                            $.Notification.autoHideNotify('success', 'top right', resp.msg);
                            return
                        }
                        if (status === 'error' && (resp.type === 'marshal' || resp.type === 'readDir')) {
                            $.Notification.confirm('success', 'top right', resp.msg, 'Reload Now');
                            return
                        }
                        $.Notification.autoHideNotify('error', 'top right', resp.msg);
                    });
                    this.on('removedfile', function(file) {
                        alert(file.name);

                    });
                },
            });

            function renderFiles(files) {
                filesTable.data = [];
                filesTable.rows('*').remove();
                for (var i = 0; i < files.length; i++) {
                    var rowNode = filesTable.row.add([
                        files[i].name,
                        prettySize(files[i].size),
                        '<a data-message="Are you sure you would like to delete this file?" data-color="red" data-url="/driver/file/{{ .driver.Id}}/' + files[i].name + '" class="confirm-action btn btn-danger btn-xs" data-type="warning">Delete</a>'
                    ]).draw().node()
                    var jRowNode = $(rowNode);
                    jRowNode.addClass('clickable').attr('data-url', '/driver/file/{{ .driver.Id }}/' + files[i].name).attr('data-target', '_blank');
                    jRowNode.children().last().addclass('text-center');
                }
            }

            var filesTable = $('#file').DataTable({
                "lengthMenu":[5,10,15,20],
                "dom": 'lrtip',
                "columnDefs": [
                    { "orderable": false, "targets": [2] },
                    { "name": "name",   "targets": 0 },
                    { "name": "size",  "targets": 1 },
                ]
            });

            $('#file tr#filesSearch th').each( function () {
                var title = $(this).text();
                if (title != '') {
                    $(this).html('<input id="filesSearch" data-column="' + title + '" type="text"/>');
                }
            });

            $('input#filesSearch').keyup(function() {
                var name = $(this).attr('data-column');
                var column = filesTable.column(name + ':name');
                if (column.search() !== this.value ) {
                    column.search(this.value).draw();
                }
            });

            function prettySize(size) {
                var c = 0;
                while (size >= 1024) {
                    size = size / 1024;
                    c++;
                }
                var ind = '';
                switch (c) {
                    case 0:
                        ind = 'B';
                        break;
                    case 1:
                        ind = 'KB';
                        break;
                    case 2:
                        ind = 'MB';
                        break;
                    case 3:
                        ind = 'GB';
                        break;
                }
                var s =+ round(size, 1);
                return s + ' ' + ind;
            }

            function round(n, place) {
                var t = Math.pow(10, place)
                return Math.round(n *t) / t;
            }

            // #forms
    		var docId = [];
			$('button[id="addDoc"]').click(function() {
                var b = $(this);
                if (b.attr('data-added') == '0') {
					docId.push(b.attr('data-docId'));
                    b.removeClass('btn-default');
                    b.addClass('btn-success');
					b.attr('data-added', '1');
					$('button[id="done"]').removeAttr('disabled');
					$('button[id="done"]').text('Add Documents To Driver');
				} else {
                    var idx = docId.indexOf(b.attr('data-docId'));
                    if (idx > -1) {
                        docId.splice(idx, 1);
                    }
                    b.removeClass('btn-success');
					b.addClass('btn-default');
					b.attr('data-added', '0');
					if(docId.length < 1) {
						$('button[id="done"]').attr('disabled', 'disabled');
						$('button[id="done"]').text('Please Select Documents');
					}
				}
			});

			$('button[id="done"]').click(function(e){
				e.preventDefault();
                $.ajax({
                    url: '/driver/document',
                    method: 'POST',
                    data: {
                        docIds :docId.join(','),
                        id: '{{ .driver.Id }}'
                    },
                    success: function(resp) {
                        if (resp.status === 'success')  {
                            renderForms(resp.docs);
                            docId = [];
                            $('button.check').removeClass('btn-success');
                            $('button.check').addClass('btn-default');
                            $('button#done').attr('disabled', 'disabled');
    						$('button#done').text('Please Select Documents');
                            $.Notification.autoHideNotify('success', 'top right', resp.msg);
                            return
                        }
                        if (resp.status === 'error' && resp.type == 'marshal') {
                            docId = [];
                            $('button.check').removeClass('btn-success');
                            $('button.check').addClass('btn-default');
                            $('button#done').attr('disabled', 'disabled');
    						$('button#done').text('Please Select Documents');
                            $.Notification.confirm('success', 'top right', resp.msg, 'Reload Now');
                            return
                        }
                        $.Notification.autoHideNotify('error', 'top right', resp.msg);
                    },
                    error: function(d) {
                        alert('error');
                    }
                })
			});

            function renderForms(forms) {
                docsTable.data = [];
                docsTable.rows().remove().draw();
                for (var i = 0; i < forms.length; i++) {
                    var rowNode = docsTable.row.add([
                        forms[i].documentId,
                        forms[i].complete,
                        '<a data-message="Are you sure you would like to delete this document?" data-color="red" data-url="/document/del/{{ .driver.Id }}/' + forms[i].id + '" class="confirm-action btn btn-danger btn-xs" data-type="warning">Delete</a>'
                    ]).draw().node()
                    var jRowNode = $(rowNode);
                    jRowNode.addClass('clickable').attr('data-url', '/document/' + forms[i].id).attr('data-target', '_blank');
                    jRowNode.children().last().addClass('text-center');

                }
            }

            var docsTable = $('#docs').DataTable({
                "lengthMenu":[5,10,15,20],
                "dom": 'lrtip',
                "columnDefs": [
                    { "orderable": false, "targets": [1,2] },
                    { "name": "dqf",   "targets": 0 }
                ]
            });

            $('#docs tr#docsSearch th').each( function () {
                var title = $(this).text();
                if (title != '') {
                    $(this).html('<input id="docsSearch" data-column="' + title + '" type="text"/>');
                }
            });

            $('input#docsSearch').keyup(function() {
                var name = $(this).attr('data-column');
                var column = docsTable.column(name + ':name');
                if (column.search() !== this.value ) {
                    column.search(this.value).draw();
                }
            });

            $('#filter').on( 'keyup', function () {
                if (selectedTable === 'docsTable') {
                    docsTable.search( this.value ).draw();
                } else if (selectedTable === 'filesTable') {
                    filesTable.search( this.value ).draw();
                }
            });

            $(document).on('click', '.notifyjs-metro-base .yes', function() {
                location.reload();
            });
            */

        </script>

    </body>
</html>
